<UserControl x:Class="Twm.Views.Instruments.ChartParamView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Twm.Views.Instruments"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:enums="clr-namespace:Twm.Core.Enums;assembly=Twm.Core"
             xmlns:converters="clr-namespace:Twm.Core.Converters;assembly=Twm.Core"
             xmlns:extensions="clr-namespace:Twm.Core.UI.Extensions;assembly=Twm.Core"
             xmlns:validators="clr-namespace:Twm.Core.Classes.Validators;assembly=Twm.Core"
             xmlns:helpers="clr-namespace:Twm.Core.Helpers;assembly=Twm.Core"
             mc:Ignorable="d"
             d:DesignHeight="500" d:DesignWidth="500">
    <UserControl.Resources>
        <ObjectDataProvider x:Key="dataSeriesFormatEnum" MethodName="GetValues"
                    ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:DataSeriesFormat" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>


        <ObjectDataProvider x:Key="dataSeriesTypeEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:DataSeriesType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="timeFrameBaseEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:TimeFrameBase" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <!--<Style TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>-->

        <Style TargetType="DatePicker">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <converters:IntConverter x:Key="intConverter"/>
    </UserControl.Resources>
    <Grid IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=IsControlEnabled}">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*" />
            <ColumnDefinition Width="3*" />
            <ColumnDefinition Width="10" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="60" />
            <RowDefinition Height="30" />
            <RowDefinition Height="25" />
            <RowDefinition Height="30" />
            <RowDefinition Height="0" />
            <RowDefinition Height="0" />
            <RowDefinition Height="25" />
            <RowDefinition Height="30" />
            <RowDefinition Height="30" />
            <RowDefinition Height="30" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="10" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
            </Grid.RowDefinitions>

            <Label Grid.Row="0" Margin="20,0" Grid.Column="0" Content="Connection" />


            <ComboBox Grid.Row="0" Grid.Column="1" Margin="0,0,0,0" Height="25"
                     VerticalContentAlignment="Center"    
                     DisplayMemberPath="Name"
                     SelectedValuePath="Name"
                     IsEnabled="{Binding ConnectionEnabled}"
                     SelectedItem="{Binding SelectedConnection}"
                     ItemsSource="{Binding Connections}"/>


            <Label Grid.Row="1" Margin="20,0" Grid.Column="0" Content="Type" />


            <ComboBox Grid.Row="1" Grid.Column="1" Margin="0,0,0,0" Height="25"
                    VerticalContentAlignment="Center"
                    SelectedItem="{Binding SelectedType}"
                    ItemsSource="{Binding TypesItems}"/>        


        </Grid>


        <!--Instrument-->
        <Label Grid.Row="1" Margin="20,0" Grid.Column="0" Content="Instrument" />

        <TextBox Grid.Row="1" Grid.Column="1"  Height="25" IsReadOnly="True"
         VerticalContentAlignment="Center"
         x:Name="instrumentText"
         ContextMenuService.IsEnabled="false" extensions:TextBoxExtensions.Placeholder="Select Instrument"
         ContextMenuService.Placement="Bottom">
            <TextBox.Style>
                <Style>
                    <Style.Triggers>
                        <Trigger Property="TextBox.IsEnabled" Value="False">
                            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                        </Trigger>
                        <!--<Trigger Property="TextBox.IsEnabled" Value="True">
                    <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate}"/>
                </Trigger>-->
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
            <TextBox.Text>
                <Binding Path="Instrument.Symbol"
                 UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validators:EmptyStringRule ValidatesOnTargetUpdated="True"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <TextBox.ContextMenu>
                <ContextMenu x:Name="menu" />
            </TextBox.ContextMenu>
        </TextBox>


        <Button Grid.Row="1" Grid.Column="1" Height="25" Width="25" HorizontalAlignment="Right" Content="..."
                IsEnabled="{Binding IsInstrumentEnabled}"
        Click="ButtonBase_OnClick" />

        <!--Data Series-->
        <Label Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Content="Data Series" FontWeight="Bold" VerticalAlignment="Bottom" />
        <Separator Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Margin="5,0,5,3" VerticalAlignment="Bottom" />
        <Label Grid.Row="3" Margin="20,0" Grid.Column="0" Content="Format" />

        <ComboBox  ItemsSource="{Binding Path=DataSeriesFormats}"
           
             DisplayMemberPath="Name"
           SelectedValue="{Binding Path=DataSeriesFormat}"
           VerticalContentAlignment="Center"
          Grid.Row="3" Height="25" Grid.Column="1" />



        <Label Grid.Row="4" Margin="20,0" Grid.Column="0" Content="Type" />

        <ComboBox  ItemsSource="{Binding Path=DataSeriesType, Converter={converters:EnumToCollectionConverter}, Mode=OneTime}"
                   SelectedValuePath="Value"
                   DisplayMemberPath="Description"
                   SelectedValue="{Binding Path=DataSeriesType}"
                   VerticalContentAlignment="Center"
                  Grid.Row="4" Height="25" Grid.Column="1" />

        <Label Grid.Row="5" Margin="20,0" Grid.Column="0" Content="Value" />

        <TextBox Grid.Row="5" Height="25" Grid.Column="1" VerticalContentAlignment="Center">
            <TextBox.Text>
                <Binding Path="DataSeriesValue"
                         Converter="{StaticResource intConverter}"
                         UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <DataErrorValidationRule/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <!--Time Frame-->
        <Label Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="3" Content="Time Frame" FontWeight="Bold" VerticalAlignment="Bottom" />
        <Separator Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="3" Margin="5,0,5,3" VerticalAlignment="Bottom" />

        <Label Grid.Row="7" Margin="20,0" Grid.Column="0" Content="Load data base on" />

        <ComboBox ItemsSource="{Binding Path=SelectedTimeFrameBase, Converter={converters:EnumToCollectionConverter}, Mode=OneTime}"
                  SelectedValuePath="Value"
                  DisplayMemberPath="Description"
                  SelectedValue="{Binding Path=SelectedTimeFrameBase}"
                  VerticalContentAlignment="Center"
                  Grid.Row="7" Height="25" Grid.Column="1" />

        <Label Grid.Row="8" Margin="20,0" Grid.Column="0" Content="Days To Load" >
            <Label.Style>
                <Style TargetType="{x:Type Label}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=SelectedTimeFrameBase}" Value="{x:Static enums:TimeFrameBase.CustomRange}">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=SelectedTimeFrameBase}" Value="{x:Static enums:TimeFrameBase.Days}">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Label.Style>
        </Label>

        <Label Grid.Row="8" Margin="20,0" Grid.Column="0" Content="Start Date">
            <Label.Style>
                <Style TargetType="{x:Type Label}">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=SelectedTimeFrameBase}" Value="{x:Static enums:TimeFrameBase.Days}">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=SelectedTimeFrameBase}" Value="{x:Static enums:TimeFrameBase.CustomRange}">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Label.Style>
        </Label>

        <DatePicker Grid.Row="8" Grid.Column="1" Height="25" helpers:DatePickerHelper.ShowTodayButton="True"
                    helpers:DatePickerHelper.ShowTodayButtonContent="Today">
            <DatePicker.SelectedDate>
                <Binding Path="PeriodStart"
                         UpdateSourceTrigger="PropertyChanged">

                </Binding>
            </DatePicker.SelectedDate>
            <DatePicker.Resources>
                <Style TargetType="{x:Type DatePicker}">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=SelectedTimeFrameBase}" Value="{x:Static enums:TimeFrameBase.Days}">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>


                        <DataTrigger Binding="{Binding Path=SelectedTimeFrameBase}" Value="{x:Static enums:TimeFrameBase.CustomRange}">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DatePicker.Resources>
        </DatePicker>

        <TextBox Grid.Row="8" Height="25" Grid.Column="1" VerticalContentAlignment="Center" >
            <TextBox.Text>
                <Binding Path="DaysToLoad"
                         Converter="{StaticResource intConverter}"
                         UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <DataErrorValidationRule/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <TextBox.Resources>
                <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=SelectedTimeFrameBase}" Value="{x:Static enums:TimeFrameBase.CustomRange}">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=SelectedTimeFrameBase}" Value="{x:Static enums:TimeFrameBase.Days}">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Resources>

        </TextBox>

        <Label Grid.Row="9" Margin="20,0" Grid.Column="0" Content="End Date" />
        <DatePicker Grid.Row="9" Grid.Column="1" Height="25" helpers:DatePickerHelper.ShowTodayButton="True"
                    helpers:DatePickerHelper.ShowTodayButtonContent="Today" >
            <DatePicker.SelectedDate>
                <Binding Path="PeriodEnd"
                         UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <DataErrorValidationRule/>
                    </Binding.ValidationRules>
                </Binding>
            </DatePicker.SelectedDate>
        </DatePicker>
    </Grid>
</UserControl>