<UserControl x:Class="Twm.Views.Options.GeneralHistoricalDataView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:classes="clr-namespace:Twm.Core.Classes;assembly=Twm.Core"
             xmlns:controls="clr-namespace:Twm.Controls"
             mc:Ignorable="d" 
             x:Name="cacheView"
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid Margin="10,0,0,0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.Resources>
            <Style x:Key="TreeViewItemFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            

            <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>

            <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}" >
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Width" Value="16"/>
                <Setter Property="Height" Value="16"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Width="16" Height="16" Background="Transparent" Padding="5,5,5,5">
                                <Path x:Name="ExpandPath" Fill="Transparent" Stroke="#FF989898" Data="{StaticResource TreeArrow}">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="135" CenterX="3" CenterY="3"/>
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                    <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="RenderTransform" TargetName="ExpandPath">
                                        <Setter.Value>
                                            <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                                    <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TreeViewItemStyle1" TargetType="{x:Type TreeViewItem}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Padding" Value="0,0,0,0"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="19" Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <!-- created ItemRowGrid to contain both togglebutton and border -->
                                <Grid x:Name="ItemRowGrid" Grid.ColumnSpan="3" Margin="1.5,0,0,0">
                                    <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}" HorizontalAlignment="Left" d:LayoutOverrides="Width, LeftMargin, RightMargin"/>
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Margin="17.5,0,-17.5,0">
                                        <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                </Grid>
                                <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="false">
                                    <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                    <!-- setting highlight target to created ItemRowGrid instead of border -->
                                    <Setter Property="Background" TargetName="ItemRowGrid" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true"/>
                                        <Condition Property="IsSelectionActive" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </Grid.Resources>

        <TreeView x:Name="treeView"  Grid.Column="0" Grid.Row="0" ItemsSource="{Binding Providers}" SelectedItemChanged="TreeView_OnSelectedItemChanged">
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type classes:HistoricalData }" ItemsSource="{Binding Children}" >
                    <Grid HorizontalAlignment="Stretch" >
                       <Grid.ContextMenu>
                           <ContextMenu>
                                <MenuItem Header="Add"   Click="AddOnClick" />
                                <MenuItem Header="Remove" Click="RemoveOnClick"/>

                            </ContextMenu>
                        </Grid.ContextMenu>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.05*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock VerticalAlignment="Center" FontSize="14" 
                                   Foreground="#FF676A66" 
                                   Text="{Binding}" Grid.Column="1"/>
                    </Grid>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource TreeViewItemStyle1}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="FontWeight" Value="Normal" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Style.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightGray"/>
                    </Style.Resources>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Normal" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>


        <ListView x:Name="lvData"  Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Margin="2,0"  ItemsSource="{Binding ElementName=treeView, Path=SelectedItem.Data}">
            <!--<ListView.ContextMenu>
                <ContextMenu >
                    <MenuItem Header="Clear" Command="{Binding ClearCommand}"/>
                </ContextMenu>
            </ListView.ContextMenu>-->
            <ListView.Resources>
                <Style x:Key="headerLabel" TargetType="Label">
                    <Setter Property="BorderBrush" Value="Gray" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="Content" Value="{Binding}" />

                </Style>

                <DataTemplate x:Key="headerTemplateValue">
                    <Grid Background="#FFF3F3F3"    Height="{Binding ElementName=helperFieldHeader, Path=ActualHeight}"
                          Width="{Binding ElementName=helperFieldHeader, Path=ActualWidth}">
                        <Label BorderThickness="0,0,1,1" Padding="0,0,0,0"  Style="{StaticResource headerLabel}" />
                    </Grid>
                </DataTemplate>


                <DataTemplate x:Key="headerTemplateName">
                    <Grid Background="#FFF3F3F3"  Height="{Binding ElementName=helperFieldHeader, Path=ActualHeight}"
                          Width="{Binding ElementName=helperFieldHeader, Path=ActualWidth}">
                        <Label BorderThickness="0,0,1,1" Padding="0,0,0,0"  Style="{StaticResource headerLabel}" />
                    </Grid>
                </DataTemplate>
            </ListView.Resources>

            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <Grid Margin="0" Background="Transparent">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition  Width="{Binding ElementName=helperFieldHeader, Path=ActualWidth}"/>
                                        <ColumnDefinition    Width="{Binding ElementName=helperFieldHeader, Path=ActualWidth}" />
                                    </Grid.ColumnDefinitions>
                                    <Border BorderThickness="0,0,1,0"
                                            BorderBrush="Gray">
                                        <Label 
                                            Style ="{StaticResource itemViewStyle}"
                                            Padding="5,0,0,0"
                                            HorizontalContentAlignment="Center"
                                            Background="{TemplateBinding Background}" 
                                            ContentStringFormat="dd.MM.yyyy HH:mm"
                                            Content="{Binding PeriodStart}" />
                                    </Border>
                                    <Border BorderThickness="0,0,0,0"
                                            Grid.Column="1"
                                            BorderBrush="Gray">
                                        <Label 
                                            Style ="{StaticResource itemViewStyle}"
                                            HorizontalContentAlignment="Center"
                                            Padding="5,0,0,0"
                                            Background="{TemplateBinding Background}" 
                                            ContentStringFormat="dd.MM.yyyy HH:mm"
                                            Content="{Binding PeriodEnd}" />
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Margin" Value="2,0,0,0" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Height" Value="25" />
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="LightGray" />
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Period start(UTC)"
                                    Width="{Binding ElementName=helperFieldHeader, Path=ActualWidth}"
                                    HeaderTemplate="{StaticResource headerTemplateValue}" />
                    <GridViewColumn Header="Period end(UTC)"
                                    Width="{Binding ElementName=helperFieldHeader, Path=ActualWidth}"
                                    HeaderTemplate="{StaticResource headerTemplateName}" />
                    </GridView>
            </ListView.View>
        </ListView>

        <Grid Visibility="Hidden" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2"  >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="24" /> <!--Correction Width-->
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="14*" />
            </Grid.RowDefinitions>
            <!--This is the hidden helper Field which is used to bind to, using the "Fill" column of the helper grid-->
            <Grid Grid.Column="0" Grid.Row="0" Background="Green" x:Name="helperFieldHeader" />
        </Grid>


        <Button Grid.Row="1" Grid.Column="0" Content="Remove all" Command="{Binding Path=RemoveAllCommand}" HorizontalAlignment="Right" Padding="5" Margin="0 5 0 0"/>

        <controls:LoadingPanel x:Name="loadingPanel"  Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" 
                               Width="{Binding ElementName=lvData, Path=ActualWidth}"
                               IsLoading="{Binding ElementName=treeView, Path=SelectedItem.IsBusy, Mode=OneWay}"
                               Message="{Binding ElementName=treeView, Path=SelectedItem.Message}"
                               SubMessage="{Binding ElementName=treeView, Path=SelectedItem.SubMessage}" />
    </Grid>
</UserControl>
