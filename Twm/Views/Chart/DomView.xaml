<UserControl x:Class="Twm.Views.Chart.DomView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:Twm.Controls"
             xmlns:extensions="clr-namespace:Twm.Core.UI.Extensions;assembly=Twm.Core"
             xmlns:validators="clr-namespace:Twm.Core.Classes.Validators;assembly=Twm.Core"
             x:Name="UserControl"
             ClipToBounds="True"
             mc:Ignorable="d">
    <Grid x:Name="orderBook">
        <Grid.Resources>
            <Style x:Key="headerLabel" TargetType="{x:Type Label}">
                <Setter Property="BorderBrush" Value="Gray" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Content" Value="{Binding}" />

            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>


        <Grid IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=IsControlEnabled}">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="170" />
                <ColumnDefinition Width="200" />
                
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="60" />
                <RowDefinition Height="30" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="170" />
                    <ColumnDefinition Width="200" />
                    
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="30" />
                </Grid.RowDefinitions>

                <Label Grid.Row="0" Margin="20,0" Grid.Column="0" Content="Connection" />


                <ComboBox Grid.Row="0" Grid.Column="1" Margin="0,0,0,0" Height="25"
                 VerticalContentAlignment="Center"    
                 DisplayMemberPath="Name"
                 SelectedValuePath="Name"                 
                 SelectedItem="{Binding DataSeriesParams.SelectedConnection}"
                 ItemsSource="{Binding DataSeriesParams.Connections}"/>


                <Label Grid.Row="1" Margin="20,0" Grid.Column="0" Content="Type" />


                <ComboBox Grid.Row="1" Grid.Column="1" Margin="0,0,0,0" Height="25"
                VerticalContentAlignment="Center"
                SelectedItem="{Binding DataSeriesParams.SelectedType}"
                ItemsSource="{Binding DataSeriesParams.TypesItems}"/>


            </Grid>

            <!--Instrument-->
            <Label Grid.Row="1" Margin="20,0,0,0" Grid.Column="0" Content="Instrument" />

            <TextBox Grid.Row="1" Grid.Column="1"  Height="25" IsReadOnly="True"
                    VerticalContentAlignment="Center"
                    x:Name="instrumentText"
                    ContextMenuService.IsEnabled="false" extensions:TextBoxExtensions.Placeholder="Select Instrument"
                    ContextMenuService.Placement="Bottom">
                <TextBox.Style>
                    <Style>
                        <Style.Triggers>
                            <Trigger Property="TextBox.IsEnabled" Value="False">
                                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                            </Trigger>
                            <!--<Trigger Property="TextBox.IsEnabled" Value="True">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate}"/>
            </Trigger>-->
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding Path="DataSeriesParams.Instrument.Symbol"
             UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validators:EmptyStringRule ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
                <TextBox.ContextMenu>
                    <ContextMenu x:Name="menu" />
                </TextBox.ContextMenu>
            </TextBox>

            <Button Grid.Row="1" Grid.Column="1" Height="25" Width="25" HorizontalAlignment="Right" Content="..."
            IsEnabled="{Binding DataSeriesParams.IsInstrumentEnabled}" Click="ButtonBase_OnClick" />

        </Grid>

        <ListView x:Name="lvPrices"
          ItemsSource="{Binding PricesViewModel.PricesView}"
          Grid.Row="1"
          Grid.Column="0" 
          Margin="5,0,5,0"
          IsSynchronizedWithCurrentItem="True"
          Background="Transparent"
          Style="{StaticResource listViewStyle}">

            <ListView.Resources>
                <DataTemplate x:Key="headerTemplate">
                    <Grid Height="25"
                  Width="{Binding ElementName=helperField1, Path=ActualWidth}"
                  HorizontalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="4*" />
                            <RowDefinition Height="1*" />
                        </Grid.RowDefinitions>
                        <Label BorderThickness="0,0,1,0"
                       Foreground="{DynamicResource textColor}"
                       Style="{StaticResource headerLabel}" />
                        <Label BorderThickness="0,0,1,1" Content="" Style="{StaticResource headerLabel}"
                       Foreground="{DynamicResource textColor}"
                       Grid.Row="1" />
                    </Grid>
                </DataTemplate>
            </ListView.Resources>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <Grid Margin="0" Background="Transparent">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition
                                    Width="{Binding ElementName=helperField1, Path=ActualWidth}" />
                                        <ColumnDefinition
                                    Width="{Binding ElementName=helperField2, Path=ActualWidth}" />
                                        <ColumnDefinition
                                    Width="{Binding ElementName=helperField3, Path=ActualWidth}" />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>


                                    <Label Grid.Column="0"
                                            HorizontalContentAlignment="Center"
                                            Foreground="{DynamicResource gridTextColor}"
                                            Content="{Binding Level}">
                                        <Label.Style>
                                            <Style TargetType="Label" BasedOn="{StaticResource itemViewStyle}">
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=IsAsk}" Value="True" />
                                                            <Condition Binding="{Binding Path=IsBest}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" Value="IndianRed" />
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=IsBid}" Value="True" />
                                                            <Condition Binding="{Binding Path=IsBest}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" Value="DarkSeaGreen" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Label.Style>
                                    </Label>



                                    <controls:CustomProgressBar Grid.Column="1" BackgroundColor="IndianRed"  Minimum="0"
                                                        FillColor="{DynamicResource gridBackgroundColor}"                                                        
                                                        IsApplyOpacity="True"
                                                        Maximum="{Binding ElementName=lvPrices,  Path=DataContext.PricesViewModel.MaxVolumeValue}"
                                                        Value="{Binding Volume, TargetNullValue=''}" Height="25"
                                                        Orientation="Left" >
                                    </controls:CustomProgressBar>


                                        <Label Style="{StaticResource itemViewStyle}"
                                                Grid.Column="1"
                                                HorizontalContentAlignment="Right"
                                                Foreground="{DynamicResource gridTextColor}"
                                                Padding="20,0"
                                                Background="Transparent">
                                                <TextBlock Visibility="{Binding Visibility}"
                                                    Text="{Binding Volume, StringFormat='{}{0:N2}', TargetNullValue=''}" />
                                        </Label>

                                    <Label Style="{StaticResource itemViewStyle}"
                                            Grid.Column="2"
                                            HorizontalContentAlignment="Right"
                                            Foreground="{DynamicResource gridTextColor}"
                                            Padding="20,0"
                                            Background="Transparent">
                                        <TextBlock Visibility="{Binding Visibility}"
                                            Text="{Binding CumSize, StringFormat='{}{0:N2}', TargetNullValue=''}" />
                                    </Label>









                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="BorderThickness" Value="0,0,1,1" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="Padding" Value="2,0,0,0" />
                    <Setter Property="Height" Value="25" />
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource highlightColor}" />
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Prices"
                            Width="{Binding ElementName=helperField1, Path=ActualWidth}"
                            HeaderTemplate="{StaticResource headerTemplate}" />

                    <GridViewColumn Header="Sizes"
                            Width="{Binding ElementName=helperField2, Path=ActualWidth}"
                            HeaderTemplate="{StaticResource headerTemplate}" />

                    <GridViewColumn Header="Cum. size"
                            Width="{Binding ElementName=helperField3, Path=ActualWidth}"
                            HeaderTemplate="{StaticResource headerTemplate}" />

                  


                </GridView>
            </ListView.View>

        </ListView>

        <!--This is the hidden helper Grid which does the resizing -->
        <Grid Visibility="Hidden" Grid.Column="0"  Grid.Row="1" Margin="5,0,5,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
              
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
                <RowDefinition Height="24*" />
            </Grid.RowDefinitions>
            <!--This is the hidden helper Field which is used to bind to, using the "Fill" column of the helper grid-->
            <Grid Grid.Column="0" Grid.Row="0" x:Name="helperField1" />
            <Grid Grid.Column="1" Grid.Row="0" x:Name="helperField2" />
            <Grid Grid.Column="2" Grid.Row="0" x:Name="helperField3" />
            <Grid Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" x:Name="helperFieldTab2" />
        </Grid>


    </Grid>
</UserControl>