<UserControl x:Class="FancyCandles.ChartPane"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FancyCandles"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             x:Name="chartPane">

    <UserControl.Resources>
        <local:TopBottomMarginConverter x:Key="topBottomMarginConverter"/>
        <local:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
        <local:SquareBoolToVisibilityConverter x:Key="squareBoolToVisibilityConverter"/>
        <local:VerticalCrossLineVisibilityConverter x:Key="verticalCrossLineVisibilityConverter"/>
        <local:CandleDrawingParametersConverter x:Key="candleDrawingParametersConverter"/>
    </UserControl.Resources>

    <Grid DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" Background="{Binding Path=Background, Mode=OneWay}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="{Binding Path=PriceAxisWidth, Mode=OneWay}"/>
        </Grid.ColumnDefinitions>

        <!-- ============================================================================================================================================================== -->
        <!-- ДИАГРАММА V: -->
        <!-- Подложка для диаграммы объемов, чтобы можно было ее подкрасить и нарисовать рамочку -->
        <Border Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                Background="{Binding Path=ChartAreaBackground, Mode=OneWay}"
                BorderBrush="{Binding Path=AxisTickColor}"
                BorderThickness="1"
                RenderOptions.EdgeMode="Aliased"
                Visibility="{Binding Path=IsVolumePanelVisible, Converter={StaticResource boolToVisibilityConverter}}" />

        <!-- Обертка для ItemsControl нужна для определения размеров. -->
        <Grid x:Name="volumeHistogramContainer" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
              MouseWheel="OnMouseWheel" MouseMove="OnMouseMoveInsideVolumeHistogramContainer" Panel.ZIndex="2"
              Visibility="{Binding Path=IsVolumePanelVisible, Converter={StaticResource boolToVisibilityConverter}}" >

            <!-- Нужно заполнить весь контейнер прозрачным содержимым, а иначе перекрестие не работает: -->
            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Transparent"/>

            <local:ChartPaneElement 
                SeriesSource="{Binding ElementName=thisUserControl, Path=CandlesSource, Mode=OneWay}"
                VisibleSeriesRange="{Binding ElementName=thisUserControl, Path=VisibleCandlesRange, Mode=OneWay}"
                VisibleCandlesExtremums="{Binding ElementName=thisUserControl, Path=VisibleCandlesExtremums, Mode=OneWay}"
                BullishBarFill="{Binding ElementName=thisUserControl, Path=BullishVolumeBarFill, Mode=OneWay}"
                ToolTipService.PlacementTarget="{Binding ElementName=volumeHistogramContainer, Path=., Mode=OneWay}"
                ToolTipService.Placement="Relative"
                RenderOptions.EdgeMode="Aliased">
                <local:ChartPaneElement.CandleWidthAndGap>
                    <MultiBinding Converter="{StaticResource candleDrawingParametersConverter}">
                        <Binding ElementName="thisUserControl" Path="CandleWidth" Mode="OneWay"/>
                        <Binding ElementName="thisUserControl" Path="CandleGap" Mode="OneWay"/>
                    </MultiBinding>
                </local:ChartPaneElement.CandleWidthAndGap>
                <local:ChartPaneElement.Margin>
                    <MultiBinding Converter="{StaticResource topBottomMarginConverter}">
                        <Binding ElementName="thisUserControl" Path="PriceChartTopMargin" Mode="OneWay"/>
                        <Binding ElementName="thisUserControl" Path="PriceChartBottomMargin" Mode="OneWay"/>
                    </MultiBinding>
                </local:ChartPaneElement.Margin>
            </local:ChartPaneElement>

            <!-- Горизонтальная линия перекрестия: -->
            <Line Stroke="{Binding Path=CrossLinesBrush, Mode=OneWay}" StrokeThickness="1"
                    IsHitTestVisible="False" RenderOptions.EdgeMode="Aliased"
                    X1="0" 
                    Y1="{Binding Path=CurrentMousePosition.Y, Mode=OneWay}" 
                    X2="{Binding ElementName=volumeHistogramContainer, Path=ActualWidth, Mode=OneWay}" 
                    Y2="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Y1, Mode=OneWay}">
                <Line.Visibility>
                    <MultiBinding Converter="{StaticResource squareBoolToVisibilityConverter}">
                        <Binding Path="IsCrossLinesVisible" Mode="OneWay"/>
                        <Binding ElementName="volumeHistogramContainer" Path="IsMouseOver" Mode="OneWay"/>
                    </MultiBinding>
                </Line.Visibility>
            </Line>

            <!-- Вертикальная линия перекрестия: -->
            <Line Stroke="{Binding Path=CrossLinesBrush, Mode=OneWay}" StrokeThickness="1"
                    IsHitTestVisible="False" RenderOptions.EdgeMode="Aliased"
                    X1="{Binding Path=CurrentMousePosition.X, Mode=OneWay}" 
                    Y1="0" 
                    X2="{Binding RelativeSource={RelativeSource Mode=Self}, Path=X1, Mode=OneWay}" 
                    Y2="{Binding ElementName=volumeHistogramContainer, Path=ActualHeight, Mode=OneWay}">
                <Line.Visibility>
                    <MultiBinding Converter="{StaticResource verticalCrossLineVisibilityConverter}">
                        <Binding Path="IsCrossLinesVisible" Mode="OneWay"/>
                        <Binding ElementName="priceChartContainer" Path="IsMouseOver" Mode="OneWay"/>
                        <Binding ElementName="volumeHistogramContainer" Path="IsMouseOver" Mode="OneWay"/>
                    </MultiBinding>
                </Line.Visibility>
            </Line>

        </Grid>
        <!-- ============================================================================================================================================================== -->
        <!-- Вертикальная шкала с метками объема: -->
        <local:VolumeTicksElement Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Stretch"
                                  GapBetweenTickLabels="{Binding Path=GapBetweenPriceTickLabels, Mode=OneWay}"
                                  ChartBottomMargin="{Binding Path=VolumeHistogramBottomMargin, Mode=OneWay}"
                                  ChartTopMargin="{Binding Path=VolumeHistogramTopMargin, Mode=OneWay}"
                                  PriceAxisWidth="{Binding Path=PriceAxisWidth, Mode=OneWay}"
                                  VisibleCandlesExtremums="{Binding Path=VisibleCandlesExtremums, Mode=OneWay}"
                                  IsGridlinesEnabled="{Binding Path=IsHorizontalGridlinesEnabled, Mode=OneWay}"
                                  GridlinesPen="{Binding Path=HorizontalGridlinesPen, Mode=OneWay}"
                                  RenderOptions.EdgeMode="Aliased"
                                  Visibility="{Binding Path=IsVolumePanelVisible, Converter={StaticResource boolToVisibilityConverter}}"/>

        <!-- ============================================================================================================================================================== -->
        

        
        
        
        
        
    </Grid>
</UserControl>
